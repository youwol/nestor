name: Stop py-youwol
description: Stop py-youwol and collect logs into an artifact
author: jdecharne@youwol.com


inputs:

  instance:
    description: >
      An abstract string value, as output by youwol/nestor/py-youwol/start action, i.e :
      - uses: youwol/nestor/py-youwol/start@v1
        id: start_py-youwol
        with:
          repository_conf: youwol/integration-tests-conf
          ref_conf: main
          path_conf: yw_config_IT.py
      - uses: youwol/nestor/py-youwol/stop@v1
        id: stop_py-youwol
        with:
          instance: steps.start_py-youwol.outputs.instance
    required: true

  artifact:
    description: >
      Name of the artifact to upload.
      Default to py-youwol_logs
    default: py-youwol_logs


runs:
  using: composite

  steps:
    - name: Stop py-youwol
      id: stop_py-youwol
      working-directory: ${{ inputs.instance }}
      run: sh py-youwol.shutdown.sh
      shell: sh

    - name: Coverage HTML Report
      id: coverage_html_report
      working-directory: ${{ inputs.instance }}
      env:
        COVERAGE_DEBUG_FILE: coverage_html.debug
      run: |
        title="Coverage report HTML"
        msg="HTML report generation failed. See job logs"
        coverage html > coverage_html.log 2>&1 || echo "::error title=$title::$msg"
      shell: sh

    - name: Coverage XML Report
      id: coverage_xml_report
      working-directory: ${{ inputs.instance }}
      env:
        COVERAGE_DEBUG_FILE: coverage_xml.debug
      run: |
        title="Coverage report XML"
        msg="XML report generation failed. See job logs"
        coverage xml > coverage_xml.log 2>&1 || echo "::error title=$title::$msg"
      shell: sh

    - name: Upload artifacts
      id: upload_artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.artifact }}
        path: |
          ${{ inputs.instance }}/.coveragerc
          ${{ inputs.instance }}/py-youwol.log
          ${{ inputs.instance }}/coverage.debug
          ${{ inputs.instance }}/coverage.coverage
          ${{ inputs.instance }}/coverage_html.debug
          ${{ inputs.instance }}/coverage_html.log
          ${{ inputs.instance }}/htmlcov
          ${{ inputs.instance }}/coverage_xml.debug
          ${{ inputs.instance }}/coverage_xml.log
          ${{ inputs.instance }}/coverage.xml
